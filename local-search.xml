<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>方法</title>
    <link href="/2020/10/02/%E6%96%B9%E6%B3%95/"/>
    <url>/2020/10/02/%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h1><p>函数也叫方法或者功能</p><p>就是可以用来完成特定功能的代码块，有名字，还可以传参数。可以用来重复使用</p><p>定义和使用</p><h2 id="方法的定义"><a class="markdownIt-Anchor" href="#方法的定义"></a> 方法的定义</h2><p>位置：类中，所有的方法之外</p><p>语法：</p><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> 返回值类型 方法名(类型 变量名<span class="hljs-number">1</span>, 类型 变量名<span class="hljs-number">2</span>)&#123;    方法体； 实现功能的具体步骤&#125;</code></pre><p>public 权限修饰符：公开的</p><p>static : 静态， 现在可以直接在主方法中调用</p><p>返回值类型：</p><p>​<code>void</code> : 方法没有返回值</p><p>​类型 ： 方法有返回值</p><p>方法名：方法的标记，方便后期调用和查找</p><p>(): 可以传入参数</p><p>{}: 执行步骤</p><p>定义方法的步骤：1、根据需求，看出方法的功能  2、根据功能给方法取一个见名知意的名字 3、根据题意确定方法的参数（自己不能确定的，需要外界指定的） 4、根据题意确定方法是否需要返回值</p><p>注意：方法分定义和执行，如果只有定义，方法是不生效，要能够执行方法，方法必须在主方法中直接或间接被调用</p><h2 id="方法的调用"><a class="markdownIt-Anchor" href="#方法的调用"></a> 方法的调用</h2><p>位置：主方法</p><p>语法： 方法名(实参列表)</p><h2 id="方法的分类"><a class="markdownIt-Anchor" href="#方法的分类"></a> 方法的分类</h2><p>根据方法是否有返回值以及参数</p><p>无参无返回值：好比你跟你爸要生活费， 你不需要送礼，你也得不到任何东西</p><p>无参带返回值：好比你跟你你妈要生活费，不需要任何付出，但是可以得到回馈</p><p>带参无返回值：好比你去玩游戏，投入了时间和金钱，但是最后什么都没有了</p><p>有参有返回值：好比你去商店买东西，一手交钱，一手交货</p><h3 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h3><p>定义：形式参数（变量）， 类型，名称，数量</p><p>​类型：规定实参给的数据的类型</p><p>​名称：在方法体内部使用这个变量（数据）</p><p>​数量：规定实参的数量</p><p>调用：实参（数据）</p><p>​实参会将数据按照位置 依次给到形参，个数、类型必须和形参匹配</p><p>有多少个形参就必须有多少个实参，类型兼容</p><h3 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> 返回值</h3><p>方法头：包括修饰符，返回值，方法名，参数列表</p><p>返回值：规定了方法执行之后是否有结果送出，是什么类型</p><p><code>void</code> : 在方法体中，不能有返回值， 在<code>return</code>后面不能跟数据</p><p>非<code>void</code>: 在方法体中，必须有return ，后面必须跟数据，数据的类型必须和返回值类型兼容</p><h3 id="return-关键字"><a class="markdownIt-Anchor" href="#return-关键字"></a> return 关键字</h3><p>只能出现在方法体中</p><p>1、提前结束方法，结束这个方法</p><p>2、送出返回值</p><h3 id="目标"><a class="markdownIt-Anchor" href="#目标"></a> 目标</h3><p>根据需求定义一个方法</p><p>​位置</p><p>​带参，返回值</p><p>看见一个方法，通过方法的说明（告诉你方法是干嘛的），源码， 正确调用一个方法</p><p>定义方法： 随机10次生成 合法的成绩，想办法统计及格率</p><p>方法的调用，其实就是将方法进行压栈处理，每一个方法被调用到都会被存入栈顶，一旦方法执行结束之后，就会从栈顶弹出去。</p><h3 id="方法的参数值传递"><a class="markdownIt-Anchor" href="#方法的参数值传递"></a> 方法的参数值传递</h3><p>方法定义（代码）</p><p>调用到的时候，才会执行 -&gt; 需要将代码（指令）加载到内存，方法栈，栈（局部变量）</p><p>方法签名是调用方法的唯一标识：方法名+参数列表（类型，个数，顺序）</p><p>在一个类中，方法签名必须唯一</p><p>在主方法（直接|间接）调用其他方法的时候都是通过方法签名去找方法的</p><h2 id="方法重载"><a class="markdownIt-Anchor" href="#方法重载"></a> 方法重载</h2><p>名字很重要</p><p>如果多个方法完成的功能是类似的，你的方法名可以相同，但是必须要整，形参列表不同（个数，类型，顺序）</p><p>重载的滥用</p><h2 id="递归"><a class="markdownIt-Anchor" href="#递归"></a> 递归</h2><p>一个方法直接或间接调用自己，就是递归</p><p>递归体：方法本身要做的事情</p><p>递归头：停止递归的条件</p>]]></content>
    
    
    <categories>
      
      <category>Java方法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/10/02/hello-world/"/>
    <url>/2020/10/02/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
